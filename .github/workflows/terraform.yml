name: Terraform Deployment

on:
  push:
    branches:
      - dev
      - main
      - feature/*
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
      tf-folder:
        description: 'speocific folder to deploy. use in chicken/egg scenarios'
        required: true
        default: ''
      destroy:
        description: 'destroy'
        type: 'boolean'
        required: false
        default: false
      migrate-state:
        description: 'migrate state file during init'
        type: 'boolean'
        required: false
        default: false

jobs:
  check-ecr:
    runs-on: ubuntu-latest
    outputs:
      ecr_exists: ${{ steps.check-ecr.outputs.exists }}
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Check if ECR repository exists
      id: check-ecr
      run: |
        if aws ecr describe-repositories --repository-names fusion > /dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
        else
          echo "exists=false" >> $GITHUB_OUTPUT
        fi
  deploy-ecr:
    needs: check-ecr
    environment: Production
    runs-on: ubuntu-latest
    if: needs.check-ecr.outputs.ecr_exists == 'false'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.12.2
          
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform-ecr

      - name: Terraform Apply
        run: |
          # Plan to review before apply (optional)
          terraform plan -out=tfplan -input=false
          
          # If on main branch, run apply
          if [ "${{ git
          hub.ref }}" == "refs/heads/main" ]; then
            # Apply only if on main
            terraform apply -input=false -auto-approve tfplan
          fi
          if [ "$DESTROY" == "true" ]; then
            terraform destroy -auto-approve
          fi
        working-directory: ./terraform-ecr

  trigger-docker-workflow:
    needs: [check-ecr, deploy-ecr]
    if: needs.check-ecr.outputs.ecr_exists == 'false'
    runs-on: ubuntu-latest
    steps:
    - name: Trigger Docker Workflow
      uses: .github/workflows/docker.yml
         
  deploy-ecs:
    needs: [check-ecr, deploy-ecr]
    environment: Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'  # Optional, for clarity

    env:
      TF_VERSION: 1.12.2
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform-ecr

      - name: Terraform Apply
        run: |
          # Plan to review before apply (optional)
          terraform plan -out=tfplan -input=false
          
          # If on main branch, run apply
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            # Apply only if on main
            terraform apply -input=false -auto-approve tfplan
          fi
          if [ "$DESTROY" == "true" ]; then
            terraform destroy -auto-approve
          fi
        working-directory: ./terraform-ecr
